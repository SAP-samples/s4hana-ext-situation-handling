<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.sap.cldfnd</groupId>
	<artifactId>situationhandling</artifactId>
	<packaging>war</packaging>
	<version>0.0.1-SNAPSHOT</version>
	<name>Situation Handling Java Backend</name>
	<url>http://maven.apache.org</url>
	
	<properties>
		<s4hana.sdk.version>2.11.1</s4hana.sdk.version>
		<apache.cxf.version>3.1.14</apache.cxf.version>
		<feign.version>10.2.0</feign.version>
		<openejb.version>7.0.5</openejb.version>
		<maven.license.version>1.17</maven.license.version>
		
		<!-- Required for BTP user session management and audit logging. -->
        <scp.warImportPackage>com.sap.security.auth.service,com.sap.security.um.service.api,com.sap.core.service.auditlog.impl,com.sap.cloud.auditlog,com.sap.cloud.auditlog.exception,com.sap.cloud.auditlog.extension</scp.warImportPackage>
	</properties>
	
	<dependencyManagement>
		<dependencies>
			<!-- SAP S/4HANA Cloud SDK Bill of Materials -->
            <dependency>
                <groupId>com.sap.cloud.s4hana</groupId>
                <artifactId>sdk-bom</artifactId>
                <version>${s4hana.sdk.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            
            <!-- REST Client with declarative API -->
			<dependency>
				<groupId>io.github.openfeign</groupId>
				<artifactId>feign-bom</artifactId>
				<version>${feign.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
        </dependencies>
	</dependencyManagement>
	
	<dependencies>
	
		<!-- API for Java EE 7 Web Profile TomEE 7 runtime on SAP Business Technology Platform (BTP) Neo -->
        <dependency>
			<groupId>com.sap.cloud</groupId>
			<artifactId>neo-javaee7-wp-api</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- Neo - Java EE 7 Web Profile API -->
		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-web-api</artifactId>
			<scope>provided</scope>
		</dependency>
		
		<!-- Implementation of the Business Technology Platform (BTP) abstraction for core platform functionality on the SAP Business Technology Platform (BTP) (Neo) -->		
		<dependency>
			<groupId>com.sap.cloud.s4hana.cloudplatform</groupId>
			<artifactId>scp-neo</artifactId>
		</dependency>
		
		<!-- JAX-RS Implementation (REST server) -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-integration-cdi</artifactId>
			<version>${apache.cxf.version}</version>
			<scope>provided</scope>
		</dependency>
		
		<!-- JSON Provider for CXF -->
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
		</dependency>
		
		<!-- REST Client with declarative API -->
		<dependency>
		    <groupId>io.github.openfeign</groupId>
		    <artifactId>feign-core</artifactId>
		</dependency>
		<dependency>
		    <groupId>io.github.openfeign</groupId>
		    <artifactId>feign-jaxrs</artifactId>
		</dependency>
		<dependency>
		    <groupId>io.github.openfeign</groupId>
		    <artifactId>feign-jackson</artifactId>
		</dependency>
		<dependency>
		    <groupId>io.github.openfeign</groupId>
		    <artifactId>feign-slf4j</artifactId>
		</dependency>
		<dependency>
		    <groupId>io.github.openfeign</groupId>
		    <artifactId>feign-httpclient</artifactId>
		</dependency>
		
		<!-- Workaround to call API_PURCHASEREQ_PROCESS_SRV OData service's PATCH method via OData $batch request -->
		<dependency>
			<groupId>com.sap.cloud.s4hana</groupId>
			<artifactId>datamodel</artifactId>
		</dependency>
		
		<!-- test dependencies -->
		
		<!-- Test framework -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Assertions with Fluent API -->
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>1.3</version>
			<scope>test</scope>
		</dependency>
		
		<!-- Local server to stub S/4HANA and Workflow API -->
		<dependency>
			<groupId>com.github.tomakehurst</groupId>
			<artifactId>wiremock</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Mocking SAP Business Technology Platform (BTP) specific objects: destinations, user, platform etc -->
		<dependency>
			<groupId>com.sap.cloud.s4hana</groupId>
			<artifactId>testutil</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- SLF4J Logger implementation for testing -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<scope>test</scope>
		</dependency>
		
		<!-- Run the same version of TomEE-JaxRS in a container -->		
		<dependency>
		    <groupId>org.apache.tomee</groupId>
		    <artifactId>tomee-embedded</artifactId>
		    <scope>test</scope>
		</dependency>
		
		<!-- Run Junit integration tests in an OpenEJB container -->
		<dependency>
		    <groupId>org.apache.tomee</groupId>
		    <artifactId>openejb-junit</artifactId>
		    <version>${openejb.version}</version>
		    <scope>test</scope>
		</dependency>
		
	</dependencies>
	
	<build>
		<finalName>situationhandling</finalName>
		
		<pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-war-plugin</artifactId>
                    <version>3.2.0</version>
                    <configuration>
                        <attachClasses>true</attachClasses>
                        <archive>
                            <manifestEntries>
                                <Version>${project.version}</Version>
                                <Import-Package>${scp.warImportPackage}</Import-Package>
                            </manifestEntries>
                        </archive>
                    </configuration>
                </plugin>            
            </plugins>
        </pluginManagement>
		
		<plugins>
		
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.7.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			
			<!-- run unit tests -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20.1</version>
				<configuration>
					<reuseForks>false</reuseForks>
					<forkCount>1</forkCount>
					<!-- TODO add your proxy settings here to run JUnit tests against real systems from Maven -->
					<argLine>${surefireArgLine} -Dhttp.proxyHost= -Dhttp.proxyPort= -D$k=$v</argLine>   
					<redirectTestOutputToFile>true</redirectTestOutputToFile>
				</configuration>
			</plugin>
			
			<!-- measurement of code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.0</version>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
						<configuration>                
                			<propertyName>surefireArgLine</propertyName>
            			</configuration>
					</execution>
					<execution>
						<id>default-report</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<configuration>
							<rules></rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
			<!-- generate license files -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>${maven.license.version}</version>
				
				<executions>
					<!-- NOTICE file -->
					<execution>
						<id>update-notice</id>
						<goals>
							<goal>update-project-license</goal>
						</goals>
						<configuration>
							<force>true</force>
							<licenseFile>../NOTICE</licenseFile>
							<licenseResolver>${project.baseUri}src/main/build</licenseResolver>
							<licenseName>notice</licenseName>
							<inceptionYear>2019</inceptionYear>
							<organizationName>SAP SE or an SAP affiliate company</organizationName>
						</configuration>
					</execution>
					
					<!-- CREDITS file -->
					<execution>
						<id>add-third-party</id>
						<goals>
							<goal>add-third-party</goal>
						</goals>
						<configuration>
							<outputDirectory>..</outputDirectory>
							<thirdPartyFilename>CREDITS</thirdPartyFilename>
							<fileTemplate>./src/main/build/third-party-file.ftl</fileTemplate>
							<sortArtifactByName>true</sortArtifactByName>
							<excludeTransitiveDependencies>true</excludeTransitiveDependencies>
							<includeTransitiveDependencies>false</includeTransitiveDependencies>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	
</project>
